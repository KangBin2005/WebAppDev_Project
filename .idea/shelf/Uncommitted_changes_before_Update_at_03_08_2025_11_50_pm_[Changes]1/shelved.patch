Index: Forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from wtforms import Form, StringField, DateField, TimeField, TextAreaField, SelectField, validators\r\n\r\nclass CreateActivityForm(Form):\r\n    name = StringField('Activity Name', [\r\n        validators.Length(min=1, max=150),\r\n        validators.DataRequired()\r\n    ])\r\n    description = TextAreaField('Description', [\r\n        validators.Length(min=1, max=500),\r\n        validators.DataRequired()\r\n    ])\r\n    venue = StringField('Venue', [\r\n        validators.Length(min=1, max=150),\r\n        validators.DataRequired()\r\n    ])\r\n    date = DateField('Date', format='%Y-%m-%d', validators=[validators.DataRequired()])\r\n    start_time = TimeField('Start Time', validators=[validators.DataRequired()])\r\n    end_time = TimeField('End Time', validators=[validators.DataRequired()])\r\n\r\n\r\nclass CreateEnquiryForm(Form):\r\n    name = StringField('Your Name', [\r\n        validators.Length(min=1, max=100),\r\n        validators.DataRequired()\r\n    ])\r\n\r\n    subject = SelectField('Subject', choices=[\r\n        ('', 'Select a subject'),  # Default empty option\r\n        ('Activity', 'Activity'),\r\n        ('Technical Issues', 'Technical Issues'),\r\n        ('Account Issues', 'Account Issues'),\r\n        ('General Feedback / Concerns', 'General Feedback / Concerns'),\r\n        ('Navigation Issues', 'Navigation Issues'),\r\n        ('Others', 'Others')\r\n    ], validators=[validators.DataRequired()])\r\n    # ... other fields ...\r\n\r\n    message = TextAreaField('Message', [\r\n        validators.Length(min=1, max=1000),\r\n        validators.DataRequired()\r\n    ])\r\n\r\n\r\nclass ReplyParticipantEnquiryForm(CreateEnquiryForm):\r\n    # Class-level field definition (required by WTForms)\r\n    reply_text = TextAreaField('Staff Reply', [\r\n        validators.Length(min=1, max=1000),\r\n        validators.DataRequired()\r\n    ])\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        # Modify existing fields\r\n        self.name.render_kw = {'readonly': True}\r\n        self.subject.render_kw = {'readonly': True}\r\n        self.message.render_kw = {'readonly': True}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Forms.py b/Forms.py
--- a/Forms.py	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
+++ b/Forms.py	(date 1754236148890)
@@ -1,4 +1,6 @@
-from wtforms import Form, StringField, DateField, TimeField, TextAreaField, SelectField, validators
+import decimal
+
+from wtforms import Form, StringField, DateField, TimeField, TextAreaField, SelectField, DecimalField, validators
 
 class CreateActivityForm(Form):
     name = StringField('Activity Name', [
@@ -53,4 +55,22 @@
         # Modify existing fields
         self.name.render_kw = {'readonly': True}
         self.subject.render_kw = {'readonly': True}
-        self.message.render_kw = {'readonly': True}
\ No newline at end of file
+        self.message.render_kw = {'readonly': True}
+
+class CreateProductForm(Form):
+    product = StringField('Product Name',[
+        validators.length(min=1, max=20),
+        validators.DataRequired()])
+    description = TextAreaField('Description', [
+        validators.Length(min=1, max=50),
+    ])
+    price = DecimalField('Price',
+        places=2,
+        rounding=decimal.ROUND_UP,
+        validators=[validators.DataRequired()])
+    image_url = StringField('Image URL', [
+        validators.DataRequired()
+    ])
+
+
+
Index: templates/Public/donations.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"Public/base.html\" %}\r\n{% block title %}Shop{% endblock %}\r\n{% block content %}\r\n<div class=\"jumbotron\">\r\n    <h1>Support Our Mission</h1>\r\n    <p class=\"lead\">Gifts Made With Love By Our Volunteers</p>\r\n</div>\r\n\r\n<div class=\"container mt-5\">\r\n    <h2 class=\"mb-4\">Browse Our Gifts</h2>\r\n    <div class=\"row g-4\">\r\n        {% for product in products %}\r\n        <div class=\"col-md-4\">\r\n            <div class=\"card h-100\">\r\n                <img src=\"{{ product.image_url }}\" class=\"card-img-top\" alt=\"{{ product.name }}\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{{ product.name }}</h5>\r\n                    <p class=\"card-text\">{{ product.description }}</p>\r\n                    <div class=\"d-flex justify-content-between align-items-center\">\r\n                        <span class=\"h5 mb-0\">${{ '%.2f'|format(product.price) }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-footer d-flex justify-content-between bg-light\">\r\n                    <button class=\"btn btn-primary btn-sm\">Add to Cart</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {% endfor %}\r\n    </div>\r\n</div>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Public/donations.html b/templates/Public/donations.html
--- a/templates/Public/donations.html	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
+++ b/templates/Public/donations.html	(date 1754235266158)
@@ -14,7 +14,7 @@
             <div class="card h-100">
                 <img src="{{ product.image_url }}" class="card-img-top" alt="{{ product.name }}">
                 <div class="card-body">
-                    <h5 class="card-title">{{ product.name }}</h5>
+                    <h5 class="card-title">{{ product.product }}</h5>
                     <p class="card-text">{{ product.description }}</p>
                     <div class="d-flex justify-content-between align-items-center">
                         <span class="h5 mb-0">${{ '%.2f'|format(product.price) }}</span>
Index: Staff_directory.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, request, redirect, url_for\r\nfrom Forms import CreateActivityForm, ReplyParticipantEnquiryForm\r\nimport shelve, Participant_Activity\r\n\r\napp = Flask(__name__)\r\n\r\n\r\n@app.route('/')\r\ndef dashboard():\r\n    return render_template('Staff/dashboard.html', current_page='dashboard')\r\n\r\n@app.route('/account-management')\r\ndef manage_accounts():\r\n    return render_template('Staff/account_management.html', current_page='account_management')\r\n\r\n@app.route('/activity-management')\r\ndef manage_activities():\r\n    return render_template('Staff/activity_management.html', current_page='manage_activities')\r\n\r\n@app.route('/activity-management/participants')\r\ndef activity_participants():\r\n    participants_activities_dict = {}\r\n    db = shelve.open('participant_activity_storage.db', 'r')\r\n    participants_activities_dict = db['Activities']\r\n    db.close()\r\n\r\n    activities_list = []\r\n    for key in participants_activities_dict:\r\n        activity = participants_activities_dict.get(key)\r\n        activities_list.append(activity)\r\n    return render_template('Staff/activity_participants.html',\r\n   current_page='activity_participants', count = len(activities_list), activities_list = activities_list)\r\n\r\n@app.route('/create-participant-activity', methods=['GET', 'POST'])\r\ndef create_participant_activity():\r\n    create_participant_activity_form = CreateActivityForm(request.form)\r\n    if request.method == 'POST' and create_participant_activity_form.validate():\r\n        participants_activities_dict = {}\r\n        db = shelve.open('participant_activity_storage.db', 'c')\r\n        try:\r\n            participants_activities_dict = db['Activities']\r\n        except:\r\n            print(\"Error in retrieving Activities from storage.db.\")\r\n        activity = Participant_Activity.ParticipantActivity(create_participant_activity_form.name.data,\r\n            create_participant_activity_form.description.data,\r\n            create_participant_activity_form.venue.data,\r\n            create_participant_activity_form.date.data,\r\n            create_participant_activity_form.start_time.data,\r\n            create_participant_activity_form.end_time.data)\r\n        participants_activities_dict[activity.get_activity_id()] = activity\r\n        db['Activities'] = participants_activities_dict\r\n        db.close()\r\n        return redirect(url_for('activity_participants'))\r\n    return render_template('Staff/create_participant_activity.html', form=create_participant_activity_form)\r\n\r\n@app.route('/update-participant-activity/<int:id>/', methods=['GET', 'POST'])\r\ndef update_participant_activity(id):\r\n    update_participant_activity_form = CreateActivityForm(request.form)\r\n    if request.method == 'POST' and update_participant_activity_form.validate():\r\n        activities_dict = {}\r\n        db = shelve.open('participant_activity_storage.db', 'w')\r\n        activities_dict = db['Activities']\r\n\r\n        activity = activities_dict.get(id)\r\n        activity.set_name(update_participant_activity_form.name.data)\r\n        activity.set_description(update_participant_activity_form.description.data)\r\n        activity.set_venue(update_participant_activity_form.venue.data)\r\n        activity.set_date(update_participant_activity_form.date.data)\r\n        activity.set_start_time(update_participant_activity_form.start_time.data)\r\n        activity.set_end_time(update_participant_activity_form.end_time.data)\r\n\r\n        db['Activities'] = activities_dict\r\n        db.close()\r\n        return redirect(url_for('activity_participants'))\r\n    else:\r\n        participants_activities_dict = {}\r\n        db = shelve.open('participant_activity_storage.db', 'r')\r\n        participants_activities_dict = db['Activities']\r\n        db.close()\r\n\r\n        activity = participants_activities_dict.get(id)\r\n        update_participant_activity_form.name.data = activity.get_name()\r\n        update_participant_activity_form.description.data = activity.get_description()\r\n        update_participant_activity_form.venue.data = activity.get_venue()\r\n        update_participant_activity_form.date.data = activity.get_date()\r\n        update_participant_activity_form.start_time.data = activity.get_start_time()\r\n        update_participant_activity_form.end_time.data = activity.get_end_time()\r\n\r\n        return render_template('Staff/update_participant_activity.html',\r\n                               form = update_participant_activity_form)\r\n\r\n@app.route('/delete-participant-activity/<int:id>', methods=['POST'])\r\ndef delete_participant_activity(id):\r\n    activities_dict = {}\r\n    db = shelve.open('participant_activity_storage.db', 'w')\r\n    activities_dict = db['Activities']\r\n\r\n    activities_dict.pop(id)\r\n\r\n    db['Activities'] = activities_dict\r\n    db.close()\r\n\r\n    return redirect(url_for('activity_participants'))\r\n\r\n@app.route('/activity-management/public')\r\ndef activity_public():\r\n    return render_template('Staff/activity_public.html', current_page='activity_public')\r\n\r\n@app.route('/enquiry-management')\r\ndef manage_enquries():\r\n    return render_template('Staff/enquiry_management.html', current_page='manage_enquires')\r\n\r\n# Retrieving Participants Enquiries as Staff\r\n@app.route('/enquiry-management/participants')\r\ndef enquiry_participants():\r\n    # Handle filter parameters\r\n    selected_subject = request.args.get('subject', '')\r\n    selected_status = request.args.get('status', '')\r\n\r\n    # Initialize variables\r\n    enquiries = []\r\n    all_enquiries = []\r\n\r\n    try:\r\n        # Open the shelve database in read-only mode\r\n        with shelve.open('participant_enquiries_storage.db', 'r') as db:\r\n            # Retrieve all non-deleted enquiries\r\n            all_enquiries = [\r\n                e for e in db.get('Participant_Enquiries', {}).values()\r\n                if not e.get_deleted_for_staff()\r\n            ]\r\n\r\n        # Apply filters if any\r\n        for enquiry in all_enquiries:\r\n            subject_match = not selected_subject or enquiry.get_subject() == selected_subject\r\n            status_match = not selected_status or enquiry.get_status() == selected_status\r\n            if subject_match and status_match:\r\n                enquiries.append(enquiry)\r\n\r\n        # Sort enquiries by ID\r\n        enquiries.sort(key=lambda x: x.get_enquiry_id())\r\n\r\n    except Exception as e:\r\n        print(f\"Error loading enquiries: {str(e)}\")\r\n\r\n    # Define subject and status options\r\n    subjects = ['Activity', 'Technical Issues', 'Account Issues',\r\n                'General Feedback / Concerns', 'Navigation Issues', 'Others']\r\n    statuses = ['Pending', 'Replied']\r\n\r\n    return render_template('Staff/enquiry_participants.html',\r\n                           current_page='enquiry_participants',\r\n                           enquiries=enquiries,\r\n                           count=len(all_enquiries),\r\n                           selected_subject=selected_subject,\r\n                           selected_status=selected_status,\r\n                           subjects=subjects,\r\n                           statuses=statuses)\r\n\r\n@app.route('/reply-participant-enquiry/<int:id>/', methods=['GET', 'POST'])\r\ndef participant_enquiry_reply(id):\r\n    form = ReplyParticipantEnquiryForm(request.form)\r\n\r\n    if request.method == 'POST' and form.validate():\r\n        db = shelve.open('participant_enquiries_storage.db', 'w')\r\n        enquiries_dict = db['Participant_Enquiries']\r\n        enquiry = enquiries_dict.get(id)\r\n\r\n        # Save reply and update status\r\n        enquiry.set_reply(form.reply_text.data)\r\n        enquiry.set_status(\"Replied\")\r\n\r\n        db['Participant_Enquiries'] = enquiries_dict\r\n        db.close()\r\n\r\n        # Redirect back to enquiries list with success\r\n        return redirect(url_for('enquiry_participants'))\r\n\r\n    # GET request - load existing enquiry\r\n    db = shelve.open('participant_enquiries_storage.db', 'r')\r\n    enquiry = db['Participant_Enquiries'].get(id)\r\n    db.close()\r\n\r\n    # Pre-fill form data\r\n    form.name.data = enquiry.get_name()\r\n    form.subject.data = enquiry.get_subject()\r\n    form.message.data = enquiry.get_message()\r\n\r\n    return render_template('Staff/participant_enquiry_reply.html', form=form)\r\n\r\n\r\n@app.route('/staff-delete-enquiry/<int:id>', methods=['POST'])\r\ndef staff_delete_participant_enquiry(id):\r\n    try:\r\n        with shelve.open('participant_enquiries_storage.db', 'w') as db:\r\n            enquiries_dict = db.get('Participant_Enquiries', {})\r\n            if id in enquiries_dict:\r\n                enquiries_dict[id].set_deleted_for_staff(True)\r\n                db['Participant_Enquiries'] = enquiries_dict\r\n    except Exception as e:\r\n        print(f\"Error deleting enquiry: {str(e)}\")\r\n\r\n    return redirect(url_for('enquiry_participants'))\r\n\r\n@app.route('/enquiry-management/public')\r\ndef enquiry_public():\r\n    return render_template('Staff/enquiry_public.html', current_page='enquiry_public')\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Staff_directory.py b/Staff_directory.py
--- a/Staff_directory.py	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
+++ b/Staff_directory.py	(date 1754233816484)
@@ -206,6 +206,10 @@
 def enquiry_public():
     return render_template('Staff/enquiry_public.html', current_page='enquiry_public')
 
+@app.route('/store_management')
+def manage_store():
+    return render_template('Staff/store_management.html', current_page='store_management')
+
 if __name__ == '__main__':
     app.run(debug=True)
 
Index: templates/includes/staff_navbar.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><style>\r\n /* Enhanced active state for navbar items */\r\n  .navbar-nav .active > .nav-link {\r\n    font-weight: bold;\r\n    color: #ffffff !important;\r\n    background-color: rgba(255, 255, 255, 0.3) !important;  /* More opaque */\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);  /* Added shadow */\r\n    text-shadow: 0 0 5px rgba(255,255,255,0.5);  /* Glow effect */\r\n  }\r\n\r\n  /* Enhanced dropdown active items */\r\n  .dropdown-item.active,\r\n  .dropdown-item:active {\r\n    background-color: #007BFF !important;\r\n    color: white !important;\r\n    font-weight: bold;\r\n  }\r\n\r\n  /* Hover states */\r\n  .nav-link:hover {\r\n    background-color: rgba(255, 255, 255, 0.15) !important;\r\n  }\r\n\r\n  .dropdown-item:hover {\r\n    background-color: #f8f9fa !important;\r\n    color: #007BFF !important;\r\n  }\r\n</style>\r\n\r\n<nav class=\"navbar navbar-expand-lg\"\r\n     style=\"background: linear-gradient(90deg, #007BFF, #28A745); padding: 0.5rem 1rem;\">\r\n    <a class=\"navbar-brand d-flex flex-column align-items-start\" href=\"/\"\r\n       style=\"font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\">\r\n        <span style=\"font-size: 2rem; letter-spacing: 2px; font-weight: bold;\">\r\n          <span style=\"color: white;\">SG</span><span style=\"color: #7ed957;\">Enable</span>\r\n        </span>\r\n        <small style=\"color: white; font-size: 0.8rem; line-height: 1;\">Inclusive Society, Enabled Lives</small>\r\n    </a>\r\n\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span style=\"display: inline-block; width: 25px;\">\r\n            <span style=\"display: block; height: 2px; background: white; margin: 5px 0;\"></span>\r\n            <span style=\"display: block; height: 2px; background: white; margin: 5px 0;\"></span>\r\n            <span style=\"display: block; height: 2px; background: white; margin: 5px 0;\"></span>\r\n        </span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarNav\">\r\n        <!-- Left: Nav links -->\r\n        <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item {% if current_page == 'dashboard' %}active{% endif %}\">\r\n                <a class=\"nav-link text-white\" href=\"{{ url_for('dashboard') }}\">Dashboard</a>\r\n            </li>\r\n            <li class=\"nav-item {% if current_page == 'account_management' %}active{% endif %}\">\r\n                <a class=\"nav-link text-white\" href=\"{{ url_for('manage_accounts') }}\">Account Management</a>\r\n            </li>\r\n\r\n            <!-- Activity Management Dropdown -->\r\n            <li class=\"nav-item dropdown {% if current_page in ['manage_activities', 'activity_participants', 'activity_public'] %}active{% endif %}\">\r\n                <a class=\"nav-link dropdown-toggle text-white\" href=\"#\" id=\"activityDropdown\" role=\"button\"\r\n                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Activity Management\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"activityDropdown\">\r\n                    <a class=\"dropdown-item {% if current_page == 'activity_participants' %}active{% endif %}\"\r\n                       href=\"{{ url_for('activity_participants') }}\">Participants</a>\r\n                    <a class=\"dropdown-item {% if current_page == 'activity_public' %}active{% endif %}\"\r\n                       href=\"{{ url_for('activity_public') }}\">Public</a>\r\n                </div>\r\n            </li>\r\n\r\n            <!-- Enquiry Management Dropdown -->\r\n            <li class=\"nav-item dropdown {% if current_page in ['manage_enquires', 'enquiry_participants', 'enquiry_public'] %}active{% endif %}\">\r\n                <a class=\"nav-link dropdown-toggle text-white\" href=\"#\" id=\"enquiryDropdown\" role=\"button\"\r\n                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Enquiry Management\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"enquiryDropdown\">\r\n                    <a class=\"dropdown-item {% if current_page == 'enquiry_participants' %}active{% endif %}\"\r\n                       href=\"{{ url_for('enquiry_participants') }}\">Participants</a>\r\n                    <a class=\"dropdown-item {% if current_page == 'enquiry_public' %}active{% endif %}\"\r\n                       href=\"{{ url_for('enquiry_public') }}\">Public</a>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <!-- Right: Notification + Dropdown -->\r\n        <ul class=\"navbar-nav align-items-center\">\r\n            <!-- Notification Bell -->\r\n            <li class=\"nav-item dropdown mx-3\">\r\n                <a class=\"nav-link text-white position-relative\" href=\"#\"\r\n                   id=\"notificationsDropdown\" role=\"button\" data-toggle=\"dropdown\"\r\n                   aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <i class=\"fas fa-bell fa-lg\"></i>\r\n                    <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\"\r\n                          style=\"font-size: 0.6rem;\">3\r\n                        <span class=\"sr-only\">unread notifications</span>\r\n                    </span>\r\n                </a>\r\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"notificationsDropdown\"\r\n                     style=\"min-width: 250px;\">\r\n                    <h6 class=\"dropdown-header\">Notifications</h6>\r\n                    <a class=\"dropdown-item\" href=\"#\">You have 3 new messages</a>\r\n                    <a class=\"dropdown-item\" href=\"#\">Event starting in 1 hour</a>\r\n                    <a class=\"dropdown-item\" href=\"#\">New announcement available</a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item text-center small text-muted\" href=\"#\">View all</a>\r\n                </div>\r\n            </li>\r\n\r\n            <!-- Staff Dropdown -->\r\n            <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle text-white\" href=\"#\" id=\"userDropdown\" role=\"button\"\r\n                   data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Staff Name\r\n                </a>\r\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                    <a class=\"dropdown-item\" href=\"#\">Profile</a>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\" href=\"/logout\">Logout</a>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/includes/staff_navbar.html b/templates/includes/staff_navbar.html
--- a/templates/includes/staff_navbar.html	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
+++ b/templates/includes/staff_navbar.html	(date 1754233397393)
@@ -84,8 +84,23 @@
                        href="{{ url_for('enquiry_public') }}">Public</a>
                 </div>
             </li>
+
+        <!-- Store Management Dropdown-->
+        <li class="nav-item dropdown {% if current_page in ['store_management', 'transaction_management', 'product_management'] %}active{% endif %}">
+                <a class="nav-link dropdown-toggle text-white" href="#" id="storeDropdown" role="button"
+                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    Store Management
+                </a>
+                <div class="dropdown-menu" aria-labelledby="storeDropdown">
+                    <a class="dropdown-item {% if current_page == 'product_management' %}active{% endif %}"
+                       href="{{ url_for('enquiry_participants') }}">Products</a>
+                    <a class="dropdown-item {% if current_page == 'transaction_management' %}active{% endif %}"
+                       href="{{ url_for('enquiry_public') }}">Transactions</a>
+                </div>
+            </li>
         </ul>
 
+
         <!-- Right: Notification + Dropdown -->
         <ul class="navbar-nav align-items-center">
             <!-- Notification Bell -->
Index: PWID&Public_directory.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, request, redirect, url_for\r\nimport shelve, Participant_Enquiry\r\nfrom datetime import date\r\nfrom Forms import CreateEnquiryForm\r\n\r\napp = Flask(__name__)\r\n\r\n# ========================\r\n# Sample SG Enable Outlets Data\r\n# ========================\r\noutlets = {\r\n    1: {\r\n        'name': 'SG Enable Headquarters',\r\n        'address': '20 Lengkok Bahru (Enabling Village), #01-01, Singapore 159053',\r\n        'phone': '+65 6479 3700',\r\n        'hours': 'Mon-Fri: 9am to 5.30pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.2875454',\r\n        'lng': '103.8149975',\r\n        'map_zoom': '17',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/SG+Enable/@1.2875508,103.8124226,17z/data=!3m1!4b1!4m6!3m5!1s0x31da19792f952f6d:0xb7db38a7c6c26ba1!8m2!3d1.2875454!4d103.8149975!16s%2Fg%2F1vg_9cwl?entry=ttu',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.669318672029!2d103.8124226!3d1.2875508!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31da19792f952f6d%3A0xb7db38a7c6c26ba1!2sSG%20Enable!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    2: {\r\n        'name': 'Toa Payoh Enable Hub',\r\n        'address': '190 Lorong 6 Toa Payoh, #02-510, Singapore 310190',\r\n        'phone': '+65 6123 4567',\r\n        'hours': 'Mon-Fri: 9am-6pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3345',\r\n        'lng': '103.8568',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/190+Lor+6+Toa+Payoh,+%2302-510,+Singapore+310190',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.73834704838!2d103.854225!3d1.3345!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjAnMDQuMiJOIDEwM8KwNTEnMjQuNSJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    3: {\r\n        'name': 'Bishan Enable Support Centre',\r\n        'address': '51 Bishan Street 13, #01-01, Singapore 579799',\r\n        'phone': '+65 6234 5678',\r\n        'hours': 'Mon-Sat: 8am-7pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3506',\r\n        'lng': '103.8484',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/51+Bishan+St+13,+%2301-01,+Singapore+579799',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.584402768847!2d103.846212!3d1.3506!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjEnMDIuMiJOIDEwM8KwNTAnNTQuMiJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    4: {\r\n        'name': 'Yishun Enable Care Centre',\r\n        'address': '101 Yishun Ave 5, #03-01, Singapore 760101',\r\n        'phone': '+65 6345 6789',\r\n        'hours': 'Mon-Fri: 8:30am-5:30pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.4295',\r\n        'lng': '103.8350',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/101+Yishun+Ave+5,+%2303-01,+Singapore+760101',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.263601270874!2d103.832812!3d1.4295!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjUnNDYuMiJOIDEwM8KwNTAnMDYuMCJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    5: {\r\n        'name': 'Tampines Enable Hub',\r\n        'address': '5 Tampines Central 6, #04-10, Singapore 529482',\r\n        'phone': '+65 6456 7890',\r\n        'hours': 'Mon-Sat: 9am-6pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3536',\r\n        'lng': '103.9386',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/5+Tampines+Central+6,+%2304-10,+Singapore+529482',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.678350727765!2d103.936412!3d1.3536!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjEnMTMuMCJOIDEwM8KwNTYnMTkuMCJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    6: {\r\n        'name': 'Jurong East Enable Centre',\r\n        'address': '135 Jurong Gateway Rd, #02-317, Singapore 600135',\r\n        'phone': '+65 6567 8901',\r\n        'hours': 'Mon-Fri: 8am-5pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3333',\r\n        'lng': '103.7426',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/135+Jurong+Gateway+Rd,+%2302-317,+Singapore+600135',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.917197049249!2d103.740412!3d1.3333!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMTknNTkuOSJOIDEwM8KwNDQnMzMuNCJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    }\r\n}\r\n\r\n# ========================\r\n# Public Routes (main site)\r\n# ========================\r\n@app.route('/')\r\ndef public_home():\r\n    return render_template('Public/home.html', current_page='public_home')\r\n\r\n@app.route('/about')\r\ndef public_about():\r\n    return render_template('Public/about.html', current_page='public_about')\r\n\r\n@app.route('/activities')\r\ndef public_activities():\r\n    return render_template('Public/activities.html', current_page='public_activities')\r\n\r\n@app.route('/contact')\r\ndef public_contact():\r\n    return render_template('Public/contact_us.html', current_page='public_contact')\r\n\r\n@app.route('/contact/enquiries')\r\ndef public_enquiries():\r\n    return render_template('Public/contact_enquries.html', current_page='public_enquiries')\r\n\r\n@app.route('/contact/locations')\r\ndef public_locations():\r\n    return render_template('Public/contact_locations.html',\r\n                           outlets=outlets,\r\n                           current_page='public_locations')\r\n\r\n@app.route('/contact/locations/<int:outlet_id>')\r\ndef public_contact_outlet_map(outlet_id):\r\n    outlet = outlets.get(outlet_id)\r\n    if not outlet:\r\n        return redirect(url_for('public_locations'))\r\n\r\n\r\n    return render_template('Public/contact_location_map.html',\r\n                           outlet=outlet,\r\n                           current_page='public_contact_outlet_map')\r\n\r\n@app.route('/contact/faq')\r\ndef public_faq():\r\n    return render_template('Public/contact_faq.html', current_page='public_faq')\r\n\r\n@app.route('/donations')\r\ndef public_donations():\r\n    products = [\r\n        {\r\n            'name': 'Canvas Tote Bag',\r\n            'description': 'Eco-friendly bag handmade by volunteers.',\r\n            'price': 15.99,\r\n            'image_url': 'https://images.unsplash.com/photo-1542291026-7eec264c27ff?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NzEyNjZ8MHwxfHNlYXJjaHwxfHxzaG9lfGVufDB8MHx8fDE3MjEwNDEzNjd8MA&ixlib=rb-4.0.3&q=80&w=1080'\r\n        },\r\n        {\r\n            'name': 'Handcrafted Mug',\r\n            'description': 'Ceramic mug with inspirational quote.',\r\n            'price': 12.50,\r\n            'image_url': 'https://example.com/mug.jpg'\r\n        },\r\n        # Add more products...\r\n    ]\r\n    return render_template('Public/donations.html', current_page='public_donations',products=products)\r\n\r\n# ========================\r\n# Participant Routes (under /participants/)\r\n# ========================\r\n@app.route('/participants/home')\r\ndef participant_home():\r\n    try:\r\n        # Get today's date\r\n        today = date.today()\r\n\r\n        # Open the shelve database\r\n        with shelve.open('participant_activity_storage.db', 'r') as db:\r\n            activities_dict = db.get('Activities', {})\r\n\r\n            # Filter upcoming activities (today or future)\r\n            upcoming = [\r\n                a for a in activities_dict.values()\r\n                if a.get_date() >= today\r\n            ]\r\n\r\n            # Sort by date (earliest first) and take first 3\r\n            upcoming_activities = sorted(\r\n                upcoming,\r\n                key=lambda x: x.get_date()\r\n            )[:3]\r\n\r\n            return render_template(\r\n                'PWIDS/home.html',\r\n                current_page='participant_home',\r\n                upcoming_activities=upcoming_activities\r\n            )\r\n\r\n    except Exception as e:\r\n        print(f\"Error accessing activity database: {str(e)}\")\r\n        return render_template(\r\n            'PWIDS/home.html',\r\n            current_page='participant_home',\r\n            upcoming_activities=[]\r\n        )\r\n\r\n\r\n@app.route('/participants/my-activities', methods=['GET'])\r\ndef participant_activities():\r\n    try:\r\n        # Get filter parameters\r\n        activity_name_filter = request.args.get('activity_name', '')\r\n        location_filter = request.args.get('location', '')\r\n\r\n        with shelve.open('participant_activity_storage.db', 'r') as db:\r\n            activities_dict = db.get('Activities', {})\r\n\r\n            # Get all unique activity names and venues\r\n            all_activities = list(activities_dict.values())\r\n            activity_names = sorted({a.get_name() for a in all_activities})\r\n            venues = sorted({a.get_venue() for a in all_activities})\r\n\r\n            # Filter activities\r\n            filtered_activities = [\r\n                a for a in all_activities\r\n                if (not activity_name_filter or a.get_name() == activity_name_filter) and\r\n                   (not location_filter or a.get_venue() == location_filter)\r\n            ]\r\n\r\n            # Sort by date (newest first)\r\n            activities_list = sorted(\r\n                filtered_activities,\r\n                key=lambda x: x.get_date(),\r\n                reverse=True\r\n            )\r\n\r\n            return render_template(\r\n                'PWIDS/my_activities.html',\r\n                current_page='participant_activities',\r\n                activities_list=activities_list,\r\n                activity_names=activity_names,\r\n                venues=venues,\r\n                selected_activity=activity_name_filter,\r\n                selected_location=location_filter\r\n            )\r\n\r\n    except Exception as e:\r\n        print(f\"Error: {str(e)}\")\r\n        return render_template(\r\n            'PWIDS/my_activities.html',\r\n            current_page='participant_activities',\r\n            activities_list=[],\r\n            activity_names=[],\r\n            venues=[],\r\n            selected_activity='',\r\n            selected_location=''\r\n        )\r\n\r\n@app.route('/participants/outlets')\r\ndef participant_locations():\r\n    return render_template('PWIDS/outlets.html',\r\n                         outlets=outlets,\r\n                         current_page='our_outlets')\r\n\r\n@app.route('/participants/outlet/<int:outlet_id>')\r\ndef outlet_map(outlet_id):\r\n    outlet = outlets.get(outlet_id)\r\n    if not outlet:\r\n        return redirect(url_for('participant_locations'))\r\n\r\n\r\n    return render_template('PWIDS/outlet_map.html',\r\n                           outlet=outlet,\r\n\r\n                           current_page='outlet_map')\r\n\r\n@app.route('/participants/help', methods=['GET', 'POST'])\r\ndef participant_help():\r\n    create_enquiry_form = CreateEnquiryForm(request.form)\r\n\r\n    # Handle form submission\r\n    if request.method == 'POST' and create_enquiry_form.validate():\r\n        enquiries_dict = {}\r\n        db = shelve.open('participant_enquiries_storage.db', 'c')\r\n        try:\r\n            enquiries_dict = db.get('Participant_Enquiries', {})\r\n        except:\r\n            print(\"Error in retrieving Participant_Enquiries from shelve.\")\r\n\r\n        new_enquiry = Participant_Enquiry.ParticipantEnquiry(\r\n            name=create_enquiry_form.name.data,\r\n            subject=create_enquiry_form.subject.data,\r\n            message=create_enquiry_form.message.data,\r\n            status=\"Pending\"\r\n        )\r\n\r\n        enquiries_dict[new_enquiry.get_enquiry_id()] = new_enquiry\r\n        db['Participant_Enquiries'] = enquiries_dict\r\n        db.close()\r\n        return redirect(url_for('participant_help', show_enquiries=1))\r\n\r\n    # Handle GET requests\r\n    selected_subject = request.args.get('subject', '')\r\n    selected_status = request.args.get('status', '')\r\n    show_enquiries = request.args.get('show_enquiries', default=0, type=int)\r\n\r\n    enquiries = []\r\n    try:\r\n        with shelve.open('participant_enquiries_storage.db', 'r') as db:\r\n            all_enquiries = list(db.get('Participant_Enquiries', {}).values())\r\n\r\n            for enquiry in all_enquiries:\r\n                subject_match = not selected_subject or enquiry.get_subject() == selected_subject\r\n                status_match = not selected_status or enquiry.get_status() == selected_status\r\n                if subject_match and status_match:\r\n                    enquiries.append(enquiry)\r\n\r\n            enquiries.sort(key=lambda x: x.get_enquiry_id())\r\n    except Exception as e:\r\n        print(f\"Error loading enquiries: {str(e)}\")\r\n\r\n    # Defined subject and status field data\r\n    subjects = ['Activity', 'Technical Issues', 'Account Issues',\r\n                'General Feedback / Concerns', 'Navigation Issues', 'Others']\r\n    statuses = ['Pending', 'Replied']\r\n\r\n    return render_template('PWIDS/help.html',\r\n                           form=create_enquiry_form,\r\n                           enquiries=enquiries,\r\n                           count=len(all_enquiries),\r\n                           selected_subject=selected_subject,\r\n                           selected_status=selected_status,\r\n                           show_enquiries=show_enquiries,\r\n                           subjects=subjects,\r\n                           statuses=statuses,\r\n                           current_page='participant_help'\r\n                           )\r\n\r\n@app.route('/update_participant_enquiry/<int:id>/', methods=['GET', 'POST'])\r\ndef update_participant_enquiry(id):\r\n    update_participant_enquiry_form = CreateEnquiryForm(request.form)\r\n    if request.method == \"POST\" and update_participant_enquiry_form.validate():\r\n        db = shelve.open('participant_enquiries_storage.db', 'w')\r\n        enquiries_dict = db['Participant_Enquiries']\r\n\r\n        enquiry = enquiries_dict.get(id)\r\n        enquiry.set_name(update_participant_enquiry_form.name.data)\r\n        enquiry.set_subject(update_participant_enquiry_form.subject.data)\r\n        enquiry.set_message(update_participant_enquiry_form.message.data)\r\n\r\n        db['Participant_Enquiries'] = enquiries_dict\r\n        db.close()\r\n        return redirect(url_for('participant_help', show_enquiries=1))\r\n    else:\r\n        db = shelve.open('participant_enquiries_storage.db', 'r')\r\n        enquiries_dict = db['Participant_Enquiries']\r\n        db.close()\r\n\r\n        enquiry = enquiries_dict.get(id)\r\n        update_participant_enquiry_form.name.data = enquiry.get_name()\r\n        update_participant_enquiry_form.subject.data = enquiry.get_subject()\r\n        update_participant_enquiry_form.message.data = enquiry.get_message()\r\n        return render_template('PWIDS/update_enquiry.html', form=update_participant_enquiry_form)\r\n\r\n@app.route('/delete_participant_enquiry/<int:id>', methods=['POST'])\r\ndef delete_participant_enquiry(id):\r\n    enquiries_dict = {}\r\n    db = shelve.open('participant_enquiries_storage.db', 'w')\r\n    enquiries_dict = db['Participant_Enquiries']\r\n\r\n    enquiries_dict.pop(id)\r\n    db['Participant_Enquiries'] = enquiries_dict\r\n    db.close()\r\n    return redirect(url_for('participant_help', show_enquiries=1))\r\n\r\n# ========================\r\n# Login_Sign Up Routes\r\n# ========================\r\n@app.route('/login')\r\ndef login():\r\n    return render_template('Login_SignUp/login.html', current_page='login')\r\n\r\n@app.route('/signup')\r\ndef signup():\r\n    return render_template('Login_SignUp/signup.html', current_page='signup')\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PWID&Public_directory.py b/PWID&Public_directory.py
--- a/PWID&Public_directory.py	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
+++ b/PWID&Public_directory.py	(date 1754235266148)
@@ -137,18 +137,18 @@
 def public_donations():
     products = [
         {
-            'name': 'Canvas Tote Bag',
+            'product': 'Canvas Tote Bag',
             'description': 'Eco-friendly bag handmade by volunteers.',
             'price': 15.99,
             'image_url': 'https://images.unsplash.com/photo-1542291026-7eec264c27ff?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NzEyNjZ8MHwxfHNlYXJjaHwxfHxzaG9lfGVufDB8MHx8fDE3MjEwNDEzNjd8MA&ixlib=rb-4.0.3&q=80&w=1080'
         },
         {
-            'name': 'Handcrafted Mug',
+            'product': 'Handcrafted Mug',
             'description': 'Ceramic mug with inspirational quote.',
             'price': 12.50,
             'image_url': 'https://example.com/mug.jpg'
         },
-        # Add more products...
+        # Add more products
     ]
     return render_template('Public/donations.html', current_page='public_donations',products=products)
 
Index: templates/Public/test.html
===================================================================
diff --git a/templates/Public/test.html b/templates/Public/test.html
deleted file mode 100644
--- a/templates/Public/test.html	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
+++ /dev/null	(revision 2a027f4f93c2f6c3e20f550468af6ad702d761e7)
@@ -1,28 +0,0 @@
-{% extends "Public/base.html" %}
-{% block content %}
-<!--<h1>Donation Gifts</h1>-->
-<!--<p>Donation products and purchase options go here</p>-->
-<div class="jumbotron">
-    <h1>Support Our Mission</h1>
-    <p class="lead">Gifts Made With Love By Our Volunteers</p>
-</div>
-<div class="container mt-5">
-    <h2 class="mb-4">placeholder</h2>
-    <div class="row g-4">
-        <div class="col-md-4">
-            <div class="card">
-                <img src="https://images.unsplash.com/photo-1542291026-7eec264c27ff?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NzEyNjZ8MHwxfHNlYXJjaHwxfHxzaG9lfGVufDB8MHx8fDE3MjEwNDEzNjd8MA&ixlib=rb-4.0.3&q=80&w=1080" class="card-img-top" alt="Product Image">
-                <div class="card-body">
-                    <h5 class="card-title">Product Name</h5>
-                    <p class="card-text">Short product description goes here.</p>
-                    <div class="d-flex justify-content-between align-items-center">
-                        <span class="h5 mb-0">$99.99</span>
-                    </div>
-                </div>
-                <div class="card-footer d-flex justify-content-between bg-light">
-                    <button class="btn btn-primary btn-sm">Add to Cart</button>
-                </div>
-            </div>
-        </div>
-       
-{% endblock %}
\ No newline at end of file
Index: templates/Staff/store_management.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Staff/store_management.html b/templates/Staff/store_management.html
new file mode 100644
--- /dev/null	(date 1754227531349)
+++ b/templates/Staff/store_management.html	(date 1754227531349)
@@ -0,0 +1,8 @@
+{% extends "Staff/Staff_base.html" %}
+{% block title %}SGEnable - Store Management {% endblock %}
+
+{% block content %}
+
+<h1>Store Management</h1>
+
+{% endblock %}
\ No newline at end of file
