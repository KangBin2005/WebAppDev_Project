Index: PWID&Public_directory.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, request, redirect, url_for, session, flash\r\nimport shelve, os, Participant_Enquiry, Public_Enquiry, Participant_Activity_Sign_Up\r\nfrom datetime import date, datetime\r\n\r\n\r\nfrom Transaction import Transaction\r\nfrom Forms import CreateParticipantEnquiryForm, CreatePublicEnquiryForm, CreateParticipantSignUpForm, CreateTransactionForm\r\nfrom math import ceil\r\nfrom functools import wraps\r\n\r\napp = Flask(__name__)\r\napp.secret_key = 'fb814d13-2f3e-48b1-937b-ef33a4d35c18'\r\n\r\n# PWID users details:\r\n# Amy: password\r\n# Julie: password123\r\n# mary: mary123\r\n# Karl: karl123\r\n\r\ndef login_required(f):\r\n    @wraps(f)                                       # Prevent access if not logged in\r\n    def custom_login(*args, **kwargs):\r\n        if 'user' not in session:\r\n            return redirect(url_for('login'))\r\n        return f(*args, **kwargs)\r\n    return custom_login\r\n\r\n\r\n# ========================\r\n# Sample SG Enable Outlets Data\r\n# ========================\r\noutlets = {\r\n    1: {\r\n        'name': 'SG Enable Headquarters',\r\n        'address': '20 Lengkok Bahru (Enabling Village), #01-01, Singapore 159053',\r\n        'phone': '+65 6479 3700',\r\n        'hours': 'Mon-Fri: 9am to 5.30pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.2875454',\r\n        'lng': '103.8149975',\r\n        'map_zoom': '17',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/SG+Enable/@1.2875508,103.8124226,17z/data=!3m1!4b1!4m6!3m5!1s0x31da19792f952f6d:0xb7db38a7c6c26ba1!8m2!3d1.2875454!4d103.8149975!16s%2Fg%2F1vg_9cwl?entry=ttu',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.669318672029!2d103.8124226!3d1.2875508!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31da19792f952f6d%3A0xb7db38a7c6c26ba1!2sSG%20Enable!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    2: {\r\n        'name': 'Toa Payoh Enable Hub',\r\n        'address': '190 Lorong 6 Toa Payoh, #02-510, Singapore 310190',\r\n        'phone': '+65 6123 4567',\r\n        'hours': 'Mon-Fri: 9am-6pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3345',\r\n        'lng': '103.8568',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/190+Lor+6+Toa+Payoh,+%2302-510,+Singapore+310190',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.73834704838!2d103.854225!3d1.3345!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjAnMDQuMiJOIDEwM8KwNTEnMjQuNSJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    3: {\r\n        'name': 'Bishan Enable Support Centre',\r\n        'address': '51 Bishan Street 13, #01-01, Singapore 579799',\r\n        'phone': '+65 6234 5678',\r\n        'hours': 'Mon-Sat: 8am-7pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3506',\r\n        'lng': '103.8484',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/51+Bishan+St+13,+%2301-01,+Singapore+579799',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.584402768847!2d103.846212!3d1.3506!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjEnMDIuMiJOIDEwM8KwNTAnNTQuMiJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    4: {\r\n        'name': 'Yishun Enable Care Centre',\r\n        'address': '101 Yishun Ave 5, #03-01, Singapore 760101',\r\n        'phone': '+65 6345 6789',\r\n        'hours': 'Mon-Fri: 8:30am-5:30pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.4295',\r\n        'lng': '103.8350',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/101+Yishun+Ave+5,+%2303-01,+Singapore+760101',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.263601270874!2d103.832812!3d1.4295!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjUnNDYuMiJOIDEwM8KwNTAnMDYuMCJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    5: {\r\n        'name': 'Tampines Enable Hub',\r\n        'address': '5 Tampines Central 6, #04-10, Singapore 529482',\r\n        'phone': '+65 6456 7890',\r\n        'hours': 'Mon-Sat: 9am-6pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3536',\r\n        'lng': '103.9386',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/5+Tampines+Central+6,+%2304-10,+Singapore+529482',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.678350727765!2d103.936412!3d1.3536!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMjEnMTMuMCJOIDEwM8KwNTYnMTkuMCJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    },\r\n    6: {\r\n        'name': 'Jurong East Enable Centre',\r\n        'address': '135 Jurong Gateway Rd, #02-317, Singapore 600135',\r\n        'phone': '+65 6567 8901',\r\n        'hours': 'Mon-Fri: 8am-5pm',\r\n        'wheelchair_accessible': True,\r\n        'lat': '1.3333',\r\n        'lng': '103.7426',\r\n        'map_zoom': '7977.322862803088',\r\n        'map_version': '1716905890037',\r\n        'map_url': 'https://www.google.com/maps/place/135+Jurong+Gateway+Rd,+%2302-317,+Singapore+600135',\r\n        'embed_url': 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.917197049249!2d103.740412!3d1.3333!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zMcKwMTknNTkuOSJOIDEwM8KwNDQnMzMuNCJF!5e0!3m2!1sen!2ssg!4v1716905890037!5m2!1sen!2ssg'\r\n    }\r\n}\r\ndef sync_public_enquiry_id():\r\n    try:\r\n        db = shelve.open('storage/public_enquiries_storage.db', 'r')\r\n        enquiries_dict = db['Public_Enquiries']\r\n        max_id = max(enquiry.get_enquiry_id() for enquiry in enquiries_dict.values())\r\n        Public_Enquiry.PublicEnquiry.count_id = max_id\r\n        db.close()\r\n    except KeyError:\r\n        # 'Participant_Enquiries' key doesn't exist in the shelve yet / No enquiries exist\r\n        Participant_Enquiry.ParticipantEnquiry.count_id = 0\r\n    except Exception as e:\r\n        print(\"Error syncing enquiry ID:\", e)\r\n\r\ndef sync_participant_activity_signup_id():\r\n    try:\r\n        db = shelve.open('storage/activity_signups.db', 'r')\r\n        signups_dict = db['Activity_Signups']\r\n        max_id = max(signup.get_signup_id() for signup in signups_dict.values())\r\n        Participant_Activity_Sign_Up.ParticipantActivitySignUp.count_id = max_id\r\n        db.close()\r\n    except KeyError:\r\n        # 'Activity_Signups' key doesn't exist in the shelve yet / No sign ups exist\r\n        Participant_Activity_Sign_Up.ParticipantActivitySignUp.count_id = 0\r\n    except Exception as e:\r\n        print(\"Error syncing enquiry ID:\", e)\r\n\r\ndef sync_participant_enquiry_id():\r\n    try:\r\n        db = shelve.open('storage/participant_enquiries_storage.db', 'r')\r\n        enquiries_dict = db['Participant_Enquiries']\r\n        max_id = max(enquiry.get_enquiry_id() for enquiry in enquiries_dict.values())\r\n        Participant_Enquiry.ParticipantEnquiry.count_id = max_id\r\n        db.close()\r\n    except KeyError:\r\n        # 'Participant_Enquiries' key doesn't exist in the shelve yet / No enquiries exist\r\n        Participant_Enquiry.ParticipantEnquiry.count_id = 0\r\n    except Exception as e:\r\n        print(\"Error syncing enquiry ID:\", e)\r\n\r\ndef sync_transaction_id():\r\n    try:\r\n        with shelve.open('storage/storage_transactions.db', 'r') as db:\r\n            transactions_dict = db.get('transaction', {})\r\n            max_id = max((transaction.get_transaction_id() for transaction in transactions_dict.values()), default=0)\r\n            Transaction.count_id = max_id\r\n            print(f\"Synced transaction count_id: {Transaction.count_id}\")\r\n    except Exception as e:\r\n        print(\"Error syncing transaction ID:\", e)\r\n        Transaction.count_id = 0\r\n\r\n\r\n@app.route('/donations/add_to_cart/<int:product_id>', methods=['POST'])\r\ndef add_to_cart(product_id):\r\n    cart = session.get('cart', {})\r\n    pid = str(product_id)\r\n\r\n    if pid in cart:\r\n        cart[pid]['quantity'] += 1\r\n    else:\r\n        cart[pid] = {\r\n            'name': request.form['name'],\r\n            'price': float(request.form['price']),\r\n            'quantity': 1\r\n        }\r\n\r\n    session['cart'] = cart\r\n    return redirect(request.referrer)\r\n\r\n@app.route('/donations/transaction_cart')\r\ndef transaction_cart():\r\n    cart = session.get('cart', {})\r\n    print(cart)\r\n    return render_template('Public/transaction_cart.html', cart=cart)\r\n\r\n@app.route('/donations/transaction_cart/update_quantity/<product_id>/<action>', methods=['POST'])\r\ndef update_quantity(product_id, action):\r\n    cart = session.get('cart', {})\r\n    pid = str(product_id)  # Make sure to use string keys\r\n\r\n    if pid in cart:\r\n        if action == 'increase':\r\n            cart[pid]['quantity'] += 1\r\n        elif action == 'decrease':\r\n            cart[pid]['quantity'] -= 1\r\n            if cart[pid]['quantity'] <= 0:\r\n                del cart[pid]\r\n\r\n        session['cart'] = cart\r\n\r\n    return redirect(url_for('transaction_cart'))\r\n\r\n\r\n@app.route('/donations/transaction_cart/remove_item/<product_id>', methods=['POST'])\r\ndef remove_item(product_id):\r\n    cart = session.get('cart', {})\r\n    if product_id in cart:\r\n        del cart[product_id]\r\n    session['cart'] = cart\r\n    return redirect(url_for('transaction_cart'))\r\n\r\n# ========================\r\n# Public Routes (main site)\r\n# ========================\r\n@app.route('/')\r\ndef public_home():\r\n    return render_template('Public/home.html', current_page='public_home')\r\n\r\n@app.route('/about')\r\ndef public_about():\r\n    return render_template('Public/about.html', current_page='public_about')\r\n\r\n@app.route('/activities', methods=['GET', 'POST'])\r\ndef public_activities():\r\n    # Get filter parameters\r\n    selected_activity = request.args.get('activity', '')\r\n    selected_venue = request.args.get('venue', '')\r\n    page = request.args.get('page', 1, type=int)\r\n    per_page = 6  # Items per page\r\n\r\n    # Open database\r\n    db = shelve.open('storage/storage_activities.db', 'r')\r\n    activities_dict = db.get('Activities', {})\r\n    db.close()\r\n\r\n    # Get all unique venues and activity names for dropdowns\r\n    all_activities = list(activities_dict.values())\r\n    venues = sorted({activity.get_activity_venue() for activity in all_activities})\r\n    activity_names = sorted({activity.get_activity_name() for activity in all_activities})\r\n\r\n    # Apply filters\r\n    filtered_activities = []\r\n    for activity in all_activities:\r\n        activity_match = not selected_activity or activity.get_activity_name() == selected_activity\r\n        venue_match = not selected_venue or activity.get_activity_venue() == selected_venue\r\n\r\n        if activity_match and venue_match:\r\n            filtered_activities.append(activity)\r\n\r\n    # Sort by date (newest first)\r\n    filtered_activities.sort(key=lambda x: x.get_activity_start_datetime(), reverse=True)\r\n\r\n    # Pagination\r\n    total = len(filtered_activities)\r\n    pages = ceil(total / per_page)\r\n    start = (page - 1) * per_page\r\n    end = start + per_page\r\n    paginated_activities = filtered_activities[start:end]\r\n\r\n    return render_template(\r\n        'Public/activities.html',\r\n        current_page='public_activities',\r\n        count=total,\r\n        activities=paginated_activities,\r\n        page=page,\r\n        pages=pages,\r\n        selected_activity=selected_activity,\r\n        selected_venue=selected_venue,\r\n        venues=venues,\r\n        activity_names=activity_names\r\n    )\r\n\r\n@app.route('/contact')\r\ndef public_contact():\r\n    return render_template('Public/contact_us.html', current_page='public_contact')\r\n\r\n@app.route('/contact/enquiries', methods=['GET', 'POST'])\r\ndef public_enquiries():\r\n    sync_public_enquiry_id()\r\n    create_enquiry_form = CreatePublicEnquiryForm(request.form)\r\n\r\n    # Handle form submission\r\n    if request.method == 'POST' and create_enquiry_form.validate():\r\n        enquiries_dict = {}\r\n        db = shelve.open('storage/public_enquiries_storage.db', 'c')\r\n        try:\r\n            enquiries_dict = db['Public_Enquiries']\r\n        except:\r\n            print(\"Error in retrieving Participant_Enquiries from shelve.\")\r\n\r\n        new_enquiry = Public_Enquiry.PublicEnquiry(\r\n            name=create_enquiry_form.name.data,\r\n            email=create_enquiry_form.email.data,\r\n            subject=create_enquiry_form.subject.data,\r\n            message=create_enquiry_form.message.data,\r\n            status=\"Pending\"\r\n        )\r\n\r\n        enquiries_dict[new_enquiry.get_enquiry_id()] = new_enquiry\r\n        db['Public_Enquiries'] = enquiries_dict\r\n        db.close()\r\n        return redirect(url_for('public_enquiries'))\r\n    return render_template('Public/contact_enquries.html',\r\n                           current_page='public_enquiries',\r\n                           form=create_enquiry_form)\r\n\r\n@app.route('/contact/locations')\r\ndef public_locations():\r\n    return render_template('Public/contact_locations.html',\r\n                           outlets=outlets,\r\n                           current_page='public_locations')\r\n\r\n@app.route('/contact/locations/<int:outlet_id>')\r\ndef public_contact_outlet_map(outlet_id):\r\n    outlet = outlets.get(outlet_id)\r\n    if not outlet:\r\n        return redirect(url_for('public_locations'))\r\n\r\n\r\n    return render_template('Public/contact_location_map.html',\r\n                           outlet=outlet,\r\n                           current_page='public_contact_outlet_map')\r\n\r\n@app.route('/contact/faq')\r\ndef public_faq():\r\n    return render_template('Public/contact_faq.html', current_page='public_faq')\r\n\r\n@app.route('/donations')\r\ndef public_donations():\r\n    product_list = []\r\n    try:\r\n        if os.path.exists('storage/storage_products.db'):  # Check if .db actually exists\r\n            with shelve.open('storage/storage_products.db', flag='r') as productdb:\r\n                products_dict = productdb.get('product', {})\r\n                product_list = list(products_dict.values())\r\n\r\n\r\n    except Exception as e:\r\n        print(f\"Error reading product database: {e}\")\r\n        # You can also log this error or flash a message\r\n\r\n    return render_template('Public/donations.html', current_page='public_donations',product_list=product_list)\r\n\r\n# ========================\r\n# Participant Routes (under /participants/)\r\n# ========================\r\n@app.route('/participants/home')\r\n@login_required\r\ndef participant_home():\r\n    try:\r\n        # Get today's date\r\n        today = date.today()\r\n\r\n        # Open the shelve database\r\n        with shelve.open('storage/participant_activity_storage.db', 'r') as db:\r\n            activities_dict = db.get('Activities', {})\r\n\r\n            # Filter upcoming activities (today or future)\r\n            upcoming = [\r\n                a for a in activities_dict.values()\r\n                if a.get_date() >= today\r\n            ]\r\n\r\n            # Sort by date (earliest first) and take first 3\r\n            upcoming_activities = sorted(\r\n                upcoming,\r\n                key=lambda x: x.get_date()\r\n            )[:3]\r\n\r\n            return render_template(\r\n                'PWIDS/home.html',\r\n                current_page='participant_home',\r\n                upcoming_activities=upcoming_activities\r\n            )\r\n\r\n    except Exception as e:\r\n        print(f\"Error accessing activity database: {str(e)}\")\r\n        return render_template(\r\n            'PWIDS/home.html',\r\n            current_page='participant_home',\r\n            upcoming_activities=[]\r\n        )\r\n\r\n@app.route('/participants/my-activities', methods=['GET'])\r\n@login_required\r\ndef participant_activities():\r\n    try:\r\n        # Get filter parameters\r\n        activity_name_filter = request.args.get('activity_name', '')\r\n        location_filter = request.args.get('location', '')\r\n\r\n        with shelve.open('storage/participant_activity_storage.db', 'r') as db:\r\n            activities_dict = db.get('Activities', {})\r\n            all_activities = list(activities_dict.values())\r\n\r\n            # Get user's registered activities\r\n            username = session.get('user')\r\n            registered_activity_ids = set()\r\n            with shelve.open('storage/activity_signups.db', 'r') as signups_db:\r\n                signups_dict = signups_db.get('Activity_Signups', {})\r\n                for signup in signups_dict.values():\r\n                    if signup.get_name() == username:\r\n                        registered_activity_ids.add(signup.get_activity_id())\r\n\r\n            # Split activities into upcoming and registered\r\n            upcoming_activities = []\r\n            registered_activities = []\r\n\r\n            today = date.today()\r\n\r\n            for activity in all_activities:\r\n                # Apply filters\r\n                if (activity_name_filter and activity.get_name() != activity_name_filter) or \\\r\n                        (location_filter and activity.get_venue() != location_filter):\r\n                    continue\r\n\r\n                # Registered activities (regardless of date)\r\n                if activity.get_activity_id() in registered_activity_ids:\r\n                    registered_activities.append(activity)\r\n                # Upcoming activities (future only + not registered)\r\n                elif activity.get_date() >= today:\r\n                    upcoming_activities.append(activity)\r\n\r\n            # Sort activities by date\r\n            upcoming_activities.sort(key=lambda x: x.get_date())\r\n            registered_activities.sort(key=lambda x: x.get_date())\r\n\r\n            # Get all unique activity names and venues for filters\r\n            activity_names = sorted({a.get_name() for a in all_activities})\r\n            venues = sorted({a.get_venue() for a in all_activities})\r\n\r\n            return render_template(\r\n                'PWIDS/my_activities.html',\r\n                current_page='participant_activities',\r\n                upcoming_activities=upcoming_activities,\r\n                registered_activities=registered_activities,\r\n                activity_names=activity_names,\r\n                venues=venues,\r\n                selected_activity=activity_name_filter,\r\n                selected_location=location_filter\r\n            )\r\n\r\n    except Exception as e:\r\n        print(f\"Error: {str(e)}\")\r\n        return render_template(\r\n            'PWIDS/my_activities.html',\r\n            current_page='participant_activities',\r\n            upcoming_activities=[],\r\n            registered_activities=[],\r\n            activity_names=[],\r\n            venues=[],\r\n            selected_activity='',\r\n            selected_location=''\r\n        )\r\n\r\n\r\n@app.route('/activity/<int:activity_id>/signup', methods=['GET', 'POST'])\r\n@login_required\r\ndef activity_signup(activity_id):\r\n    # Sync ID counter\r\n    sync_participant_activity_signup_id()\r\n\r\n    # Initialize form\r\n    signup_form = CreateParticipantSignUpForm(request.form)\r\n\r\n    # Get activity\r\n    try:\r\n        with shelve.open('storage/participant_activity_storage.db', 'r') as db:\r\n            activities_dict = db.get('Activities', {})\r\n            activity = activities_dict.get(activity_id)\r\n            if not activity:\r\n                return redirect(url_for('participant_activities'))  # Silent redirect if activity not found\r\n    except Exception as e:\r\n        print(f\"Error accessing activity data: {str(e)}\")\r\n        return redirect(url_for('participant_activities'))\r\n\r\n    # Prefill name from logged-in user's session if GET request\r\n    if request.method == 'GET':\r\n        # Get username from session\r\n        username = session.get('user', '')\r\n        # Open user storage to get user details\r\n        try:\r\n            with shelve.open('storage/user_storage.db', 'r') as db:\r\n                users_dict = db.get('Users', {})\r\n                # Here you would need to modify to store more user details\r\n                # Currently only stores username:password pairs\r\n                # For now, we'll just use the username as the name\r\n                signup_form.name.data = username\r\n        except Exception as e:\r\n            print(f\"Error accessing user data: {str(e)}\")\r\n            # Continue without prefilling if there's an error\r\n\r\n    if request.method == 'POST' and signup_form.validate():\r\n        try:\r\n            with shelve.open('storage/activity_signups.db', 'c') as db:\r\n                signups_dict = db.get('Activity_Signups', {})\r\n\r\n                new_signup = Participant_Activity_Sign_Up.ParticipantActivitySignUp(\r\n                    name=signup_form.name.data,\r\n                    phone=signup_form.phone.data,\r\n                    email=signup_form.email.data,\r\n                    accessibility_needs=signup_form.accessibility_needs.data,\r\n                    emergency_contact_name=signup_form.emergency_contact_name.data,\r\n                    emergency_phone=signup_form.emergency_phone.data,\r\n                    activity_id=activity_id\r\n                )\r\n\r\n                signups_dict[new_signup.get_signup_id()] = new_signup\r\n                db['Activity_Signups'] = signups_dict\r\n\r\n                return redirect(url_for('participant_activities'))\r\n        except Exception as e:\r\n            print(f\"Error saving signup: {str(e)}\")\r\n            # You could pass an error message to template if needed\r\n            return render_template('PWIDS/activity_signup.html',\r\n                                   form=signup_form,\r\n                                   activity=activity,\r\n                                   error=\"Failed to save signup\",\r\n                                   current_page='activity_signup')\r\n\r\n    return render_template('PWIDS/activity_signup.html',\r\n                           form=signup_form,\r\n                           activity=activity,\r\n                           current_page='activity_signup')\r\n\r\n@app.route('/withdraw-participant-activity/<int:activity_id>', methods=['POST'])\r\n@login_required\r\ndef withdraw_activity(activity_id):\r\n    db = shelve.open('storage/activity_signups.db', 'w')\r\n    signups_dict = db.get('Activity_Signups', {})\r\n\r\n    username = session.get('user')\r\n\r\n    # Find and remove the signup(s) for this user and activity\r\n    signup_ids_to_remove = [\r\n        signup_id for signup_id, signup in signups_dict.items()\r\n        if signup.get_name() == username and signup.get_activity_id() == activity_id\r\n    ]\r\n\r\n    for signup_id in signup_ids_to_remove:\r\n        signups_dict.pop(signup_id)\r\n\r\n    db['Activity_Signups'] = signups_dict\r\n    db.close()\r\n\r\n    return redirect(url_for('participant_activities'))\r\n\r\n\r\n@app.route('/participants/outlets')\r\n@login_required\r\ndef participant_locations():\r\n    return render_template('PWIDS/outlets.html',\r\n                         outlets=outlets,\r\n                         current_page='our_outlets')\r\n\r\n@app.route('/participants/outlet/<int:outlet_id>')\r\n@login_required\r\ndef outlet_map(outlet_id):\r\n    outlet = outlets.get(outlet_id)\r\n    if not outlet:\r\n        return redirect(url_for('participant_locations'))\r\n\r\n\r\n    return render_template('PWIDS/outlet_map.html',\r\n                           outlet=outlet,\r\n                           current_page='outlet_map')\r\n\r\n@app.route('/participants/help', methods=['GET', 'POST'])\r\n@login_required\r\ndef participant_help():\r\n    sync_participant_enquiry_id()\r\n    create_enquiry_form = CreateParticipantEnquiryForm(request.form)\r\n    username = session.get('user', '')  # Get username from session\r\n\r\n    # Prefill name from logged-in user's session if GET request\r\n    if request.method == 'GET':\r\n        create_enquiry_form.name.data = username\r\n\r\n    # Handle form submission\r\n    if request.method == 'POST' and create_enquiry_form.validate():\r\n        enquiries_dict = {}\r\n        db = shelve.open('storage/participant_enquiries_storage.db', 'c')\r\n        try:\r\n            enquiries_dict = db.get('Participant_Enquiries', {})\r\n        except:\r\n            print(\"Error in retrieving Participant_Enquiries from shelve.\")\r\n\r\n        new_enquiry = Participant_Enquiry.ParticipantEnquiry(\r\n            name=create_enquiry_form.name.data,\r\n            subject=create_enquiry_form.subject.data,\r\n            message=create_enquiry_form.message.data,\r\n            status=\"Pending\"\r\n        )\r\n\r\n        enquiries_dict[new_enquiry.get_enquiry_id()] = new_enquiry\r\n        db['Participant_Enquiries'] = enquiries_dict\r\n        db.close()\r\n        return redirect(url_for('participant_help', show_enquiries=1))\r\n\r\n    # Handle GET requests - MODIFIED TO FILTER BY CURRENT USER\r\n    selected_subject = request.args.get('subject', '')\r\n    selected_status = request.args.get('status', '')\r\n    show_enquiries = request.args.get('show_enquiries', default=0, type=int)\r\n\r\n    enquiries = []\r\n    try:\r\n        with shelve.open('storage/participant_enquiries_storage.db', 'r') as db:\r\n            all_enquiries = list(db.get('Participant_Enquiries', {}).values())\r\n\r\n            for enquiry in all_enquiries:\r\n                # Only show enquiries from the current user\r\n                if enquiry.get_name() == username:\r\n                    subject_match = not selected_subject or enquiry.get_subject() == selected_subject\r\n                    status_match = not selected_status or enquiry.get_status() == selected_status\r\n                    if subject_match and status_match:\r\n                        enquiries.append(enquiry)\r\n\r\n            enquiries.sort(key=lambda x: x.get_enquiry_id())\r\n    except Exception as e:\r\n        print(f\"Error loading enquiries: {str(e)}\")\r\n\r\n    # Defined subject and status field data\r\n    subjects = ['Activity', 'Technical Issues', 'Account Issues',\r\n                'General Feedback / Concerns', 'Navigation Issues', 'Others']\r\n    statuses = ['Pending', 'Replied']\r\n\r\n    return render_template('PWIDS/help.html',\r\n                           form=create_enquiry_form,\r\n                           enquiries=enquiries,\r\n                           count=len(enquiries),  # Changed from all_enquiries to enquiries\r\n                           selected_subject=selected_subject,\r\n                           selected_status=selected_status,\r\n                           show_enquiries=show_enquiries,\r\n                           subjects=subjects,\r\n                           statuses=statuses,\r\n                           current_page='participant_help'\r\n                           )\r\n\r\n@app.route('/update_participant_enquiry/<int:id>/', methods=['GET', 'POST'])\r\n@login_required\r\ndef update_participant_enquiry(id):\r\n    update_participant_enquiry_form = CreateParticipantEnquiryForm(request.form)\r\n    if request.method == \"POST\" and update_participant_enquiry_form.validate():\r\n        db = shelve.open('storage/participant_enquiries_storage.db', 'w')\r\n        enquiries_dict = db['Participant_Enquiries']\r\n\r\n        enquiry = enquiries_dict.get(id)\r\n        enquiry.set_name(update_participant_enquiry_form.name.data)\r\n        enquiry.set_subject(update_participant_enquiry_form.subject.data)\r\n        enquiry.set_message(update_participant_enquiry_form.message.data)\r\n\r\n        db['Participant_Enquiries'] = enquiries_dict\r\n        db.close()\r\n        return redirect(url_for('participant_help', show_enquiries=1))\r\n    else:\r\n        db = shelve.open('storage/participant_enquiries_storage.db', 'r')\r\n        enquiries_dict = db['Participant_Enquiries']\r\n        db.close()\r\n\r\n        enquiry = enquiries_dict.get(id)\r\n        update_participant_enquiry_form.name.data = enquiry.get_name()\r\n        update_participant_enquiry_form.subject.data = enquiry.get_subject()\r\n        update_participant_enquiry_form.message.data = enquiry.get_message()\r\n        return render_template('PWIDS/update_enquiry.html', form=update_participant_enquiry_form)\r\n\r\n@app.route('/delete_participant_enquiry/<int:id>', methods=['POST'])\r\n@login_required\r\ndef delete_participant_enquiry(id):\r\n    enquiries_dict = {}\r\n    db = shelve.open('storage/participant_enquiries_storage.db', 'w')\r\n    enquiries_dict = db['Participant_Enquiries']\r\n\r\n    enquiries_dict.pop(id)\r\n    db['Participant_Enquiries'] = enquiries_dict\r\n    db.close()\r\n    return redirect(url_for('participant_help', show_enquiries=1))\r\n\r\n\r\nfrom datetime import datetime\r\n\r\nfrom datetime import datetime\r\n\r\n\r\n@app.route('/donations/transaction_payment', methods=['GET', 'POST'])\r\ndef create_transaction():\r\n    form = CreateTransactionForm(request.form)\r\n\r\n    if request.method == 'POST' and form.validate():\r\n        sync_transaction_id()\r\n        Transaction.count_id += 1\r\n        shared_transaction_id = Transaction.count_id\r\n\r\n        cart = session.get('cart', {})\r\n        if not cart:\r\n            return \"Cart is empty\", 400\r\n\r\n        with shelve.open('storage/storage_transactions.db', 'c') as db:\r\n            transactions_dict = db.get('transaction', {})\r\n\r\n            for pid, item in cart.items():\r\n                new_transaction = Transaction(\r\n                    product_id=pid,\r\n                    product_name=item[\"name\"],\r\n                    quantity=item[\"quantity\"],\r\n                    price=item[\"price\"],\r\n                    customer_name=form.customer_name.data,\r\n                    payment_type=form.payment_type.data,\r\n                    date=datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\r\n                )\r\n                # Set all transactions to share the same transaction id\r\n                new_transaction._Transaction__transaction_id = shared_transaction_id\r\n                transactions_dict[f\"{shared_transaction_id}-{pid}\"] = new_transaction\r\n\r\n            db['transaction'] = transactions_dict\r\n        return redirect(url_for('transaction_complete'))\r\n\r\n    # For GET requests or invalid form, render the payment page\r\n    return render_template('Public/transaction_payment.html', form=form)\r\n\r\n\r\n@app.route('/donations/transaction_cart/transaction_complete')\r\ndef transaction_complete():\r\n    session['cart'] = {}\r\n    return render_template('Public/transaction_completion.html')\r\n\r\n# ========================\r\n# Login_Sign Up Routes\r\n# ========================\r\n@app.route('/login', methods=['GET', 'POST'])\r\ndef login():\r\n    if request.method == 'POST':\r\n        username = request.form['username']\r\n        password = request.form['password']\r\n\r\n        db = shelve.open('storage/user_storage.db', 'c')\r\n        users = db.get('Users', {})\r\n        db.close()\r\n\r\n        if username in users and users[username] == password:\r\n            session['user'] = username\r\n            flash(\"Logged in successfully!\", \"success\")\r\n            return redirect(url_for('participant_home'))\r\n        else:\r\n            flash(\"Invalid username or password\", \"error\")\r\n    return render_template('Login_SignUp/login.html', current_page='login')\r\n\r\n@app.route('/signup', methods=['GET', 'POST'])\r\ndef signup():\r\n    if request.method == 'POST':\r\n        username = request.form['username']\r\n        password = request.form['password']\r\n        confirm_pw = request.form['confirm_password']\r\n\r\n\r\n        db = shelve.open('storage/user_storage.db', writeback=True)\r\n        users = db.get('Users', {})\r\n\r\n        if username in users:\r\n            flash('Username already taken.', 'error')\r\n        elif password != confirm_pw:\r\n            flash('Passwords do not match.', 'error')\r\n        else:\r\n            users[username] = password\r\n            db['Users'] = users\r\n            db.close()\r\n            flash('Signup successful! Please log in.', 'success')\r\n            return redirect(url_for('login'))\r\n\r\n        db.close()\r\n    return render_template('Login_SignUp/signup.html', current_page='signup')\r\n\r\n@app.route('/logout')\r\ndef logout():\r\n    session.clear()\r\n    return redirect(url_for('public_home'))\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/PWID&Public_directory.py b/PWID&Public_directory.py
--- a/PWID&Public_directory.py	(revision ae28c75eaa63984ccbb2f4396485dbc00e7e1c2c)
+++ b/PWID&Public_directory.py	(date 1754792013946)
@@ -676,11 +676,6 @@
     return redirect(url_for('participant_help', show_enquiries=1))
 
 
-from datetime import datetime
-
-from datetime import datetime
-
-
 @app.route('/donations/transaction_payment', methods=['GET', 'POST'])
 def create_transaction():
     form = CreateTransactionForm(request.form)
Index: .idea/WebAppDev_Project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.13\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/WebAppDev_Project.iml b/.idea/WebAppDev_Project.iml
--- a/.idea/WebAppDev_Project.iml	(revision ae28c75eaa63984ccbb2f4396485dbc00e7e1c2c)
+++ b/.idea/WebAppDev_Project.iml	(date 1754791941483)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.13" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.13 virtualenv at C:\Users\Kang Bin\OneDrive\Desktop\WebAppDev_Project\.venv" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6601265b-4720-44f1-8c0e-50ec8148b1ec\" name=\"Changes\" comment=\"Created Transaction Payment, Completion screen,&#10;routes for Transaction\">\r\n      <change afterPath=\"$PROJECT_DIR$/templates/Staff/transaction_update.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Forms.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Forms.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/PWID&amp;Public_directory.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/PWID&amp;Public_directory.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Staff_directory.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Staff_directory.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/Public/transaction_cart.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/Public/transaction_cart.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/Public/transaction_completion.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/Public/transaction_completion.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/Public/transaction_payment.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/Public/transaction_payment.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/Staff/transaction_management.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/Staff/transaction_management.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/includes/staff_navbar.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/includes/staff_navbar.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"kiythes &lt;gabyeo06@gmail.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;KangBin2005&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/KangBin2005/WebAppDev_Project.git&quot;,\r\n    &quot;accountId&quot;: &quot;d70c7199-3351-42f3-96fe-51f9fdb91e43&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"30zDj7R5iJpzgdFtiSfpUOQ8HRi\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\r\n    \"JavaScript Debug.product_management.html.executor\": \"Run\",\r\n    \"ModuleVcsDetector.initialDetectionPerformed\": \"true\",\r\n    \"Python.PWID&Public_directory.executor\": \"Run\",\r\n    \"Python.Staff_directory.executor\": \"Run\",\r\n    \"Python.app.executor\": \"Run\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager\": \"true\",\r\n    \"RunOnceActivity.git.unshallow\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-PY-251.26927.90\" />\r\n        <option value=\"bundled-python-sdk-41e8cd69c857-64d779b69b7a-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-251.26927.90\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6601265b-4720-44f1-8c0e-50ec8148b1ec\" name=\"Changes\" comment=\"\" />\r\n      <created>1754621639279</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1754621639279</updated>\r\n      <workItem from=\"1754725588047\" duration=\"37211000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Update PWIDS_navbar.html\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754622205286</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754622205286</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Update activities.html\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754708119949</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754708119949</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Merge remote-tracking branch 'origin/master'\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754709876935</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754709876935</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Improved readability of Login Texts\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754710547259</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754710547259</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Merge remote-tracking branch 'origin/master'\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754719313180</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754719313180</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Merge remote-tracking branch 'origin/master'\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754724149747</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754724149747</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Working on cart\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754726731541</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754726731541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Working on cart\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754727985496</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754727985496</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Working on cart\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754735637206</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754735637206</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Working on cart\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754746615559</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754746615559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Updated cart\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754749217927</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754749217927</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Updated donations + cart\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754749384135</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754749384135</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Created Transaction Payment, Completion screen,&#10;routes for Transaction\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1754759481586</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1754759481586</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"14\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Update PWIDS_navbar.html\" />\r\n    <MESSAGE value=\"Update activities.html\" />\r\n    <MESSAGE value=\"Improved readability of Login Texts\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'\" />\r\n    <MESSAGE value=\"Working on cart\" />\r\n    <MESSAGE value=\"Updated cart\" />\r\n    <MESSAGE value=\"Updated donations + cart\" />\r\n    <MESSAGE value=\"Created Transaction Payment, Completion screen,&#10;routes for Transaction\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Created Transaction Payment, Completion screen,&#10;routes for Transaction\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/WebAppDev_Project$app.coverage\" NAME=\"app Coverage Results\" MODIFIED=\"1754745802704\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$USER_HOME$/AppData/Local/Programs/Python/Python313/Lib/site-packages/flask\" />\r\n    <SUITE FILE_PATH=\"coverage/WebAppDev_Project$Staff_directory.coverage\" NAME=\"Staff_directory Coverage Results\" MODIFIED=\"1754772392568\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/WebAppDev_Project$Test.coverage\" NAME=\"Test Coverage Results\" MODIFIED=\"1754670333721\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/WebAppDev_Project$PWID_Public_directory.coverage\" NAME=\"PWID&amp;Public_directory Coverage Results\" MODIFIED=\"1754772171241\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/WebAppDev_Project$Transaction.coverage\" NAME=\"Transaction Coverage Results\" MODIFIED=\"1754662114215\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/WebAppDev_Project$Activity_public.coverage\" NAME=\"Activity_public Coverage Results\" MODIFIED=\"1754677379427\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ae28c75eaa63984ccbb2f4396485dbc00e7e1c2c)
+++ b/.idea/workspace.xml	(date 1754793180919)
@@ -4,29 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6601265b-4720-44f1-8c0e-50ec8148b1ec" name="Changes" comment="Created Transaction Payment, Completion screen,&#10;routes for Transaction">
-      <change afterPath="$PROJECT_DIR$/templates/Staff/transaction_update.html" afterDir="false" />
+    <list default="true" id="6601265b-4720-44f1-8c0e-50ec8148b1ec" name="Changes" comment="Working on cart">
+      <change beforePath="$PROJECT_DIR$/.idea/WebAppDev_Project.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/WebAppDev_Project.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/Forms.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/PWID&amp;Public_directory.py" beforeDir="false" afterPath="$PROJECT_DIR$/PWID&amp;Public_directory.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Staff_directory.py" beforeDir="false" afterPath="$PROJECT_DIR$/Staff_directory.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/Public/transaction_cart.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/Public/transaction_cart.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/Public/transaction_completion.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/Public/transaction_completion.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/Public/transaction_payment.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/Public/transaction_payment.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/Staff/transaction_management.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/Staff/transaction_management.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/includes/staff_navbar.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/includes/staff_navbar.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/storage/activity_signups.db" beforeDir="false" afterPath="$PROJECT_DIR$/storage/activity_signups.db" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/storage/storage_transactions.db" beforeDir="false" afterPath="$PROJECT_DIR$/storage/storage_transactions.db" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/storage/user_storage.db-shm" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/storage/user_storage.db-wal" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="FileTemplateManagerImpl">
-    <option name="RECENT_TEMPLATES">
-      <list>
-        <option value="HTML File" />
-      </list>
-    </option>
   </component>
   <component name="Git.Settings">
     <option name="PREVIOUS_COMMIT_AUTHORS">
@@ -62,26 +53,22 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "DefaultHtmlFileTemplate": "HTML File",
-    "JavaScript Debug.product_management.html.executor": "Run",
-    "ModuleVcsDetector.initialDetectionPerformed": "true",
-    "Python.PWID&Public_directory.executor": "Run",
-    "Python.Staff_directory.executor": "Run",
-    "Python.app.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
-    "RunOnceActivity.git.unshallow": "true",
-    "git-widget-placeholder": "master",
-    "node.js.detected.package.eslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
+    &quot;Python.PWID&amp;Public_directory.executor&quot;: &quot;Run&quot;,
+    &quot;Python.Staff_directory.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
@@ -97,7 +84,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1754621639279</updated>
-      <workItem from="1754725588047" duration="37211000" />
+      <workItem from="1754725588047" duration="2989000" />
     </task>
     <task id="LOCAL-00001" summary="Update PWIDS_navbar.html">
       <option name="closed" value="true" />
@@ -163,79 +150,24 @@
       <option name="project" value="LOCAL" />
       <updated>1754727985496</updated>
     </task>
-    <task id="LOCAL-00009" summary="Working on cart">
-      <option name="closed" value="true" />
-      <created>1754735637206</created>
-      <option name="number" value="00009" />
-      <option name="presentableId" value="LOCAL-00009" />
-      <option name="project" value="LOCAL" />
-      <updated>1754735637206</updated>
-    </task>
-    <task id="LOCAL-00010" summary="Working on cart">
-      <option name="closed" value="true" />
-      <created>1754746615559</created>
-      <option name="number" value="00010" />
-      <option name="presentableId" value="LOCAL-00010" />
-      <option name="project" value="LOCAL" />
-      <updated>1754746615559</updated>
-    </task>
-    <task id="LOCAL-00011" summary="Updated cart">
-      <option name="closed" value="true" />
-      <created>1754749217927</created>
-      <option name="number" value="00011" />
-      <option name="presentableId" value="LOCAL-00011" />
-      <option name="project" value="LOCAL" />
-      <updated>1754749217927</updated>
-    </task>
-    <task id="LOCAL-00012" summary="Updated donations + cart">
-      <option name="closed" value="true" />
-      <created>1754749384135</created>
-      <option name="number" value="00012" />
-      <option name="presentableId" value="LOCAL-00012" />
-      <option name="project" value="LOCAL" />
-      <updated>1754749384135</updated>
-    </task>
-    <task id="LOCAL-00013" summary="Created Transaction Payment, Completion screen,&#10;routes for Transaction">
-      <option name="closed" value="true" />
-      <created>1754759481586</created>
-      <option name="number" value="00013" />
-      <option name="presentableId" value="LOCAL-00013" />
-      <option name="project" value="LOCAL" />
-      <updated>1754759481586</updated>
-    </task>
-    <option name="localTasksCounter" value="14" />
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Update PWIDS_navbar.html" />
     <MESSAGE value="Update activities.html" />
     <MESSAGE value="Improved readability of Login Texts" />
     <MESSAGE value="Merge remote-tracking branch 'origin/master'" />
     <MESSAGE value="Working on cart" />
-    <MESSAGE value="Updated cart" />
-    <MESSAGE value="Updated donations + cart" />
-    <MESSAGE value="Created Transaction Payment, Completion screen,&#10;routes for Transaction" />
-    <option name="LAST_COMMIT_MESSAGE" value="Created Transaction Payment, Completion screen,&#10;routes for Transaction" />
+    <option name="LAST_COMMIT_MESSAGE" value="Working on cart" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/WebAppDev_Project$app.coverage" NAME="app Coverage Results" MODIFIED="1754745802704" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$USER_HOME$/AppData/Local/Programs/Python/Python313/Lib/site-packages/flask" />
-    <SUITE FILE_PATH="coverage/WebAppDev_Project$Staff_directory.coverage" NAME="Staff_directory Coverage Results" MODIFIED="1754772392568" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/WebAppDev_Project$Staff_directory.coverage" NAME="Staff_directory Coverage Results" MODIFIED="1754677341965" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/WebAppDev_Project$Test.coverage" NAME="Test Coverage Results" MODIFIED="1754670333721" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/WebAppDev_Project$PWID_Public_directory.coverage" NAME="PWID&amp;Public_directory Coverage Results" MODIFIED="1754772171241" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/WebAppDev_Project$PWID_Public_directory.coverage" NAME="PWID&amp;Public_directory Coverage Results" MODIFIED="1754727790583" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/WebAppDev_Project$Transaction.coverage" NAME="Transaction Coverage Results" MODIFIED="1754662114215" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/WebAppDev_Project$Activity_public.coverage" NAME="Activity_public Coverage Results" MODIFIED="1754677379427" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.13 (WebAppDev_Project) (5)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.13\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ae28c75eaa63984ccbb2f4396485dbc00e7e1c2c)
+++ b/.idea/misc.xml	(date 1754791947636)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.13 (WebAppDev_Project) (5)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13 virtualenv at C:\Users\Kang Bin\OneDrive\Desktop\WebAppDev_Project\.venv" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
diff --git a/storage/user_storage.db-wal b/storage/user_storage.db-wal
deleted file mode 100644
